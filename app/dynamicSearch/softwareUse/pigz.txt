Use Case: pigz, which stands for parallel implementation of gzip, is a fully functional replacement for gzip that exploits multiple processors and multiple cores to the hilt when compressing data. pigz is great for multi-core processors and multi-processor systems.

Code details and examples: Code

pigz compresses using threads to make use of multiple processors and cores. The input is split into 128 KB chunks with each chunk compressed in parallel. The individual check value for each chunk is also calculated in parallel. The compressed data is written in order to the output, and a combined check value is calculated from the individual check values.

The compressed data format generated is in the gzip, zlib, or single-entry zip format using the deflate compression method, the same as the compression format used by gzip and compatible with all known software for decompressing gzip compressed data.

Sample input file: example.txt (with some content to be compressed)

Command to run: pigz example.txt

This will create an example.txt.gz file (gzip-compressed version of example.txt). The original file (example.txt) will be deleted.

To decompress file with pigz, you would use the following command: unpigz example.txt.gz

This will result in the decompressed file example.txt being created in the current directory. The original gzip-compressed file (example.txt.gz) will be deleted.