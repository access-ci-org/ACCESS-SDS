Use Case: H5py provides easy-to-use high level interface, which allows you to store huge amounts of numerical data, and easily manipulate that data from Python.

Code details and examples:

Code: 

```python
import h5py
import numpy as np

# Create a new file and dataset
filename = 'h5py_example.h5'
data = np.random.rand(1000)
with h5py.File(filename, 'w') as f:
    dset = f.create_dataset("default", data=data)
```
Input file in this case is an array of random numbers generated by numpy. 

Command to run the code:

```bash
python h5py_example.py
```

In the above code, an HDF5 file named 'h5py_example.h5' gets created. Inside this file, a dataset is created named "default", and the random numbers generated earlier are stored in this dataset.

Note: 'h5py_example.py' is a python script which is used as a sample input file that contains the above code.
