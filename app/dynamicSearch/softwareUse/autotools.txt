Use Case: Autotools is a suite of programming tools designed to assist in making source code packages portable to many Unix-like systems. It can be used to automatically configure software source code packages; process Makefile.in inputs to help create a portable Makefile; and create portable shell scripts.

Code details and examples:

Code:

Let's assume you have a simple C program i.e., `main.c`:

```c
#include <stdio.h>

int main() {
   printf("Hello, World!");
   return 0;
}
```

1. Create a file named `configure.ac`:

```shell
AC_INIT([Hello], [1.0])
AM_INIT_AUTOMAKE([-Wall -Werror foreign])
AC_PROG_CC
AC_CONFIG_FILES([Makefile])
AC_OUTPUT
```

2. Create a file named `Makefile.am`:

```shell
bin_PROGRAMS = hello
hello_SOURCES = main.c
```

3. Generate `configure` script and `Makefile.in`:

```shell
autoreconf --install
```

Your project is now ready to be built and installed.

Command to run: 

```shell
./configure
make 
make install
``` 

Input files: `configure.ac`, `Makefile.am` and your C source code file(s).
Format required: Text file.
Any specifications: It requires proper install of `M4`, `Autoconf`, `Automake` and `Autotools`.
Details in input file: It specifies your project name, version, necessary compiler and configure file.