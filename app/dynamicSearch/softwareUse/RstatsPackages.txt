Use Case: R stats packages are useful for statistical computing, machine learning, data visualization, manipulation, and many other scientific computations. Considering `ggplot2`, a popular R package for creating beautiful and complex plots. 

Code details and examples: In the case of `ggplot2` the input is typically an R dataframe. 

Code:
```R
install.packages('ggplot2') # install ggplot2
library(ggplot2) #load ggplot2

# Use mtcars dataset available in R
df = mtcars

# plot horsepower (hp) vs miles per gallon(mpg)
ggplot(data=df, aes(x=hp, y=mpg)) + geom_point()
```
The command to run this is simply to submit it in R or RStudio.

The data frame is read into R using the data() function, then it is plotted using the ggplot function from ggplot2 package, with the aes command indicating the x and y variables. geom_point() will make the plot a scatter plot. In this plot, every point represents a car with a specific horsepower (x-axis) and miles per gallon (y-axis).

Here, the setup is done on an interactive session, so there is no separate command line command to run this script. If you want to run an R script (example: script.R) from the command line, you can use the command Rscript script.R. However, you need to ensure that ggplot2 package has been installed prior to running the script.