Use Case: MapReduce in Python is a data processing tool for handling large amounts of data that cannot fit into the memory of a single computer. The map function applies a given function to each item of an iterable and outputs a list of results while the reduce function applies a function of two arguments cumulatively to the elements of an iterable, so as to reduce the iterable to a single output. 

Code Details and Examples:

Code: 

```python
from functools import reduce
  
# defining the list
lis = [ 1 , 3, 5, 6, 2, ]
  
# using reduce to compute maximum element from the list
print ("The maximum element of the list is : ",end="")
print (reduce(lambda a,b : a if a > b else b,lis))

# using map to find the square of all numbers in the list
print ("The squares of all elements of the list are : ",end="")
print (list(map(lambda x: x**2,lis)))

```

`lis` is the input list containing numbers. For the `reduce` function, the input file must be a list of elements and the specifications of that elements are that they must be capable of being processed by the reducing function being used. The `map` function also takes in a list of elements and these elements must be capable of being processed by the mapping function being used. The output for the reduce part would be 6 (the maximum element) and for the map part would be [1, 9, 25, 36, 4] (the squares of the elements).