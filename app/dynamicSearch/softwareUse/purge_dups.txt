Use Case: Purge_dups is used for purging haplotypes and overlaps in long reads. It is especially useful for assembling genomes with a high level of duplicates and overlaps.

Code details and examples:

Code

Input files: 

Purge_dups takes as input a binary alignment/map (BAM) file representing an alignment of long reads to the draft assembly, and a draft assembly in FASTA format.

1. BAM file ("reads.bam")
2. Draft assembly ("assembly.fasta")

Specifications:

1. The BAM file should be sorted and indexed. The reads should be aligned to the draft assembly.
2. The draft assembly file should be in FASTA format and represent the assembly to be purged of duplicates.

Command to generate the histogram file:

```
./PB.base/bin/pbcstat.py aligned.bam
```
This command generates three histogram files.

Command to generate cutoffs and split the assembly:

```
./PB.base/bin/calcuts.py PB.stat > cutoffs 2>calcults.log
```
Following this, the drafts can be split.

```
./PB.base/bin/split_fa.py asm.fasta > draft
```

Lastly, the assembly can be purged:

```
./PB.base/bin/purge_dups.py -2 -T cutoffs -c PB.base.pb.depth.txt draft fa > dups.bed 2> purge_dups.log
```

In the above commands:

- "aligned.bam" is the BAM file
- "PB.stat" is the statistics file generated by pbcstat.py
- "cutoffs" is the file with calculated cutoffs
- "asm.fasta" is the draft assembly
- "draft" is the split draft assembly file
- "PB.base.pb.depth.txt" is the base depth file produced by split-fa.py
- "dups.bed" is the output file containing the duplicates
- "purge_dups.log" is the log file

Note: Purge_dups can be run with different command-line arguments to specify multiple detailed options.