Use Case: Use Dimemas to simulate the execution of a Parallel Application.

Code details and examples: Code

Dimemas requires a trace file as input. The trace file contains events recorded from a parallel application. The format is specific to Dimemas and is described in the Dimemas User Guide. 

Take for instance the following file named 'example.pcf' as an input.

```
LEVEL           WORKLOAD
UNITS           NANOSEC
LOOK_BACK       NO
SPEEDUP         CONST
STORAGE         SHORT
STATISTICS      YES
COMMUNIC.BACK   YES
PRECALC         ON

APPLICATION     0

TASK            0
THREAD          0
```

Usage command:

```
dimemas -S 4 -n 4  example.pcf
```

The simplest way to get a trace file is to use the Extrae tool to instrument your application and generate a trace file. Extrae is a tool developed by the same group that developed Dimemas. 

Here is a sample Extrae configuration file (extrae.xml):

```

<trace_home>../extrae</trace_home>
<trace_default_configuration>

<buffer_size> 50M</buffer_size>
<maximum_trace_size> 50G </maximum_trace_size>
<file_size> 0 </file_size>
<file_alignment>0</file_alignment>
<minimum_flush_interval> 60 </minimum_flush_interval>
<trace_format>
        <type>MPI</type>
</trace_format>
<semantics> 
        <mpi>enabled</mpi>
        <pthread>disabled</pthread>
        <openmp>disabled</openmp>
        <memory>disabled</memory>
        <sampling>disabled</sampling>
</semantics>
</trace_default_configuration>

```
Usage command:

```
$ export EXTRAE_CONFIG_FILE=extrae.xml
$ mpirun -np 4 ./my_application
``` 
This will generate a set of trace files: one per process of your application (named TRACE.mpits). You can then convert this set of trace files to a single Dimemas trace using the `mpi2prv` command:

```
$ mpi2prv -f TRACE.mpits -o mytrace.prv
```
And finally you can run the Dimemas simulation with the resulting trace:

```
$ dimemas -S 4 -n 4 mytrace.prv
```

This will generate a Dimemas output file with the performance prediction for your application when running on four cores. The output file can be viewed with the Paraver tool.