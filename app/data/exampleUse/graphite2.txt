Use Case: Use Graphite2 for rendering 2D shapes to a bitmap with anti-aliasing. Graphite2 is a font engine that support complex non-Roman script rendering. It can handle scripts that have complex behaviors such as Arabic where characters can change shape depending on context, or Indic scripts where characters can interact and re-arrange.

Code details and examples: Code

The Graphite engine does not come with an interface for preparing input documents. Nonetheless, you can prototype writing and font rendering with the 'gr2fonttest' test suite included in Graphite2.

If you have a FreeType font that uses Graphite rendering and a Graphite description of a script (GDL) file, you could run:

./gr2fonttest /path/to/font.ttf /path/to/input.text

This will output a bitmap of the typefaceâ€™s rendering of the input text.

An input file must be a plain text file encoded in UTF-8.

Minimal example:

Input file (input.text):
```
Hello, world!
```

With a valid TTF font file at the specified path, you'd run:

```bash
./gr2fonttest /path/to/font.ttf input.text
```

This will produce a PNG image of the text "Hello, world!" as it would render using the Graphite engine, with rules as specified by your input GDL file and the font.ttf. Note that this doesn't reveal all the magic Graphite can offer, but it's a start to visualise text through this complex rendering.