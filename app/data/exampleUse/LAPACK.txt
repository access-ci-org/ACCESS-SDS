Use Case: LAPACK is used in scientific computing for solving linear equations, least-square solutions of linear systems of equations, eigenvalue problems, and singular value problems.

Code details and examples: Code:

LAPACK contains functions written in Fortran 77 that solve systems of linear equation, linear least squares problems, and eigenvalue problems. Here is an example to solve a system of linear equations:

Sample Input:
```
n = 3; nrhs = 1;

double A[n*n] = { 1, 1, 1, 1, 2, 4, 1, 3, 9 };

double b[n*nrhs] = { 1, 0, 0 };

lapack_int ipiv[n];

lapack_int info = LAPACKE_dgesv( LAPACK_ROW_MAJOR, n, nrhs, A, lda, ipiv, b, ldb );
```
In the Fortran code described, n is the number of linear equations (= number of variables), nrhs is the number of right-hand sides, A is the matrix of coefficients, b is the right-hand side, ipiv is an integer array of pivots, and info is a return code. LAPACKE_dgesv is the function for solving a double precision general linear equation.

Command to Run:
The LAPACK routines are usually invoked by including the appropriate function call in your C or Fortran source code, and then linking your program with the LAPACK library. Here's an example of how you might compile and run a C program that calls LAPACKE_dgesv (assuming `gcc` as the compiler and `your_lapack_program.c` as the source code file):
```
gcc -o your_lapack_program your_lapack_program.c -llapack
./your_lapack_program
```