Use Case: Libxc is a library of exchange-correlation functionals for density-functional theory. The aim is to provide a portable, well tested and reliable set of exchange and correlation functionals that can be used by all the ETSF codes and also other codes.

Code details and examples: Code.

1. Fortran example:

Sample Input File (input.f90):

```
use xc_f03_lib
use xc_f03_types

type(xc_f03_pointer_t) :: xc_func
integer :: func_id = 1
integer :: np = 1
double precision, allocatable :: rho(:), sigma(:), zk(:)
double precision, allocatable :: vrho(:), vsigma(:)
! allocate
allocate(rho(np), sigma(np))
allocate(zk(np), vrho(np), vsigma(np))
! initialize
rho = 0.3d0
sigma = 0.2d0
! initialize functional
call xc_f03_func_init(xc_func, func_id, XC_UNPOLARIZED)
! evaluate functional
call xc_f03_lda_exc_vxc(xc_func, np, rho, zk, vrho)
call xc_f03_gga_xc(xc_func, np, rho, sigma, zk, vrho, vsigma)
! clean up
call xc_f03_func_end(xc_func)
end
```

Command to compile and run: 

To compile: `gfortran -c input.f90 $(pkg-config --cflags --libs libxc)`
To run: `./a.out`

Please note that you need the Libxc library installed on your system and properly referenced in your PKG_CONFIG_PATH.

Note: Before running this sample code, please ensure you have the right environment for FORTRAN and Libxc is installed. Use the appropriate compilation and execution commands that suit your system architecture and OS. 

2. C Example:

Sample Input File (input.c):

```
#include <xc.h>

int main() {
  xc_func_type func;
  double rho[2] = {0.1, 0.2}, sigma[2] = {0.3, 0.5};
  double e, v, f, k;

  xc_func_init(&func, XC_GGA_X_PBE, XC_UNPOLARIZED);
  xc_gga_exc_vxc(&func, 1, rho, sigma, &e, &v, &f, &k);
  xc_func_end(&func);

  return 0;
}
```

Command to compile and run: 

To compile: `gcc -o test input.c -lxcf03`
To run: `./test`

This is a simple C program which imports the xc library and uses it to perform a computation using the GGA_X_PBE functional. Please ensure proper environment and permissions for C compilation and running the application. Please replace the constants in the double arrays "rho" and "sigma" to your desired input. The function `xc_gga_exc_vxc` provides the energy density (e), potential (v), and the derivatives of the potential (f and k).