Use Case: ParMETIS is a parallel graph partitioning and fill-reducing matrix ordering 
library. It is commonly used for partitioning unstructured graphs, meshes, and for computing fill-reducing orderings of sparse matrices.

Code details and examples:

Code:
```
idx_t options[METIS_NOPTIONS];
options[METIS_OPTION_CTYPE]    = METIS_CTYPE_SHEM;
options[METIS_OPTION_IPTYPE]   = METIS_IPTYPE_RANDOM;
options[METIS_OPTION_RTYPE]    = METIS_RTYPE_GREEDY;
options[METIS_OPTION_NO2HOP]   = 0;
options[METIS_OPTION_MINCONN]  = 0;
options[METIS_OPTION_CONTIG]   = 0;
options[METIS_OPTION_SEED]     = 0;
options[METIS_OPTION_NITER]    = 10;
options[METIS_OPTION_NCUTS]    = 1;

idx_t nvtxs = 8; // number of vertices in the graph
idx_t ncon  = 1; // number of balancing constraints (1 means only weight constraint)

idx_t xadj[nvtxs + 1];
idx_t adjncy[14];

/* Fill up xadj and adjncy. xadj is of size number of vertices plus 1. 
adjncy is the nodes connected to a vertex. More about the format can be found 
on metis' manuals*/

idx_t objval;
idx_t part[nvtxs];

ParMETIS_V3_PartKway(xadj, adjncy, NULL, NULL, &ncon, &nvtxs, 
  NULL, NULL, NULL, &objval, part, &comm);
```
input_file: none
commands to run: none

Format required: The graph needs to be converted into two arrays: xadj and adjncy. xadj[i] is the index where the nodes connected to node 'i' in adjncy start. adjncy is the array where the nodes connected to a vertex are stored continuously. 

Specifications and details in input files: none