Use Case: Libtool is a generic library supporting script that helps in the creation and execution of shell scripts to manage shared libraries. This eases the work of developers by creating libraries in a portable way across many platforms. 

Code details and examples:

Code: 

This example demonstrates the creation of a shared library using libtool. 

Create a source file named `hello.c`.

```c
#include <stdio.h>
void hello() {
    printf("Hello, World!\n");
}
```

The next step required is GNU Build System to compile and install our little library, for that we need two files.

Create a file named `configure.ac`
```bash
AC_INIT([libhello], [1.0])
AM_INIT_AUTOMAKE([-Wall -Werror foreign])
LT_INIT
AC_CONFIG_SRCDIR([hello.c])
AC_CONFIG_HEADERS([config.h])
AC_PROG_CC
AM_PROG_AR
LT_LIB_MIKE_MACRO
AC_CONFIG_FILES([Makefile])
AC_OUTPUT
```

Create a `Makefile.am` file.
```bash
lib_LTLIBRARIES = libhello.la
libhello_la_SOURCES = hello.c
libhello_la_LDFLAGS = -version-info 0:0:0
```

The autoconf and automake tools process these files to produce a configure script. 
```bash
autoreconf --install
```
Build and install the library using the following command. 
```bash
./configure
make
sudo make install
```

The above command compiles the code mentioned in hello.c to a shared library named libhello. You can now link this shared library to any application using Libtool and the application will be able to call the 'hello' function within the shared library.
